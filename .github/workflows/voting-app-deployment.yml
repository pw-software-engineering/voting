name: DeployFrontApp

on:
  repository_dispatch:
    types: [build]
  push:
    branches: [ main ]
    paths:
    - 'src/VotingApp/**'
    - 'VotingApp.Dockerfile'
  

env:
  AKS_NAME: ${{ secrets.AKS_NAME }}
  AKS_RG_NAME: ${{ secrets.AKS_RG_NAME }}
  ACR_URL: 'powoeuwacr.azurecr.io'
  OUTPUT_DIR: 'out'
  NAMESPACE: 'voting'                     # Name of your team {b, j, n}
  APP_NAME: 'voting-app'                  # Name of your application {client, server, hotel}
  DEPLOYMENT_FILE_NAME: 'voting-app.yml'  # Name of deployment file for application

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set IMAGE_ID env variable
      run: echo "IMAGE_ID=${{ env.ACR_URL }}/${{ env.APP_NAME }}:v${{ github.run_number }}" >> $GITHUB_ENV
    - name: Print IMAGE_ID
      run: echo "IMAGE_ID:${{ env.IMAGE_ID }}"
    - name: Set DOMAIN env variable
      run: echo "DOMAIN==$(az aks show -g ${{ env.AKS_RG_NAME }} -n ${{ env.AKS_NAME }} --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o tsv) >> $GITHUB_ENV
    - name: Print DOMAIN
      run: echo "${{ env.DOMAIN }}"
    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: ${{ env.ACR_URL }}
        username: ${{ secrets.ACR_USER_ID }}
        password: ${{ secrets.ACR_USER_PASSWORD }}
    - name: Build docker image
      run: docker build -f VotingApp.Dockerfile src/VotingApp/. -t ${{ env.IMAGE_ID }}
    - name: Push docker image
      run: docker push ${{ env.IMAGE_ID }}